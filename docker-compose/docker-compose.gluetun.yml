# Docker Compose gluetun
services:
  gluetun:
    image: qmcgaw/gluetun # Use the official Gluetun image for VPN service
    container_name: gluetun # Assign a clear container name for easy identification
    cap_add:
      - NET_ADMIN # Grant the container network administrative capabilities
    devices:
      - /dev/net/tun:/dev/net/tun # Attach the TUN device for VPN connectivity
    ports:
      # Forward necessary ports for other applications accessing Gluetun
      - 8080:8080 # sabnzbd web interface
      - 8989:8989 # radarr
      - 7878:7878 # sonarr
      - 6767:6767 # bazarr
    volumes:
      # Persistent storage for configuration
      - ${DockerDir}/gluetun:/gluetun # Store Gluetun configuration files
    environment:
      # Define environment variables for permissions, timezone, and VPN settings
      - PUID=${PUID}                         # User ID for permission management
      - PGID=${PGID}                         # Group ID for permission management
      - TZ=${TZ}                             # Timezone for accurate logs and schedules
      - VPN_SERVICE_PROVIDER=${VPN_SERVICE_PROVIDER} # VPN provider (e.g., NordVPN, Mullvad)
      - OPENVPN_USER=${OPENVPN_USER}         # VPN username
      - OPENVPN_PASSWORD=${OPENVPN_PASSWORD} # VPN password
      - SERVER_COUNTRIES=${SERVER_COUNTRIES} # Preferred VPN server countries
    restart: unless-stopped # Restart the container unless it is manually stopped
    healthcheck:
      # Health check to monitor Gluetun's VPN connection
      test: ["CMD-SHELL", "curl -f http://localhost || exit 1"]
      interval: 1m      # Check health every 1 minute
      timeout: 10s      # Timeout after 10 seconds if no response
      retries: 3        # Retry up to 3 times before marking the container as unhealthy
    logging:
      # Enable structured logging for better log management
      driver: "json-file"
      options:
        max-size: "10m" # Limit log file size to 10MB
        max-file: "3"   # Retain up to 3 log files
    deploy:
      resources:
        limits:
          memory: 512M  # Limit memory usage to 512MB
          cpus: '0.50'  # Restrict CPU usage to 50% of a single core
        reservations:
          memory: 256M  # Reserve 256MB of memory
          cpus: '0.25'  # Reserve 25% of a single core

networks:
  backend:
    external: true